{"version":3,"sources":["remote/webapp-client.ts","remote/register-service.ts","remote/login-service.ts","components/AuthComponent.tsx","components/FavoriteMoviesComponent.tsx","action/UseLocalStorage.tsx","themes/themes.ts","themes/global.js","remote/landing-service.ts","components/WatchHistoryComponent.tsx","components/LogOutComponent.tsx","components/LandingComponent.tsx","components/DarkModeToggleComponent.tsx","components/NavComponent.tsx","remote/moviesearch-service.ts","remote/moreInfo-service.ts","components/MovieSearchComponent.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["webappClient","axios","create","baseURL","headers","webappClientAuthorized","localStorage","getItem","register","username","password","email","firstName","lastName","userBio","a","post","response","data","authenticate","AuthComponent","props","useState","authName","setAuthName","authPass","setAuthPass","setUsername","setPassword","setEmail","setFirstName","setLastName","setUserBio","registerUser","e","preventDefault","console","log","loginUser","setItem","authorization","JSON","stringify","setCurrentUser","currentUser","to","className","Form","Group","controlId","Label","Control","onChange","currentTarget","value","type","placeholder","Button","variant","onClick","as","rows","FavoriteMoviesComponent","movies","key","initialValue","item","window","parse","error","storedValue","setStoredValue","valueToStore","Function","useLocalStorage","localmoviestorage","reduce","index","push","length","Container","style","marginTop","Row","Col","Carousel","map","twoMovies","Item","CardColumns","movie","Card","Img","width","height","alt","src","poster","lightTheme","background","color","toggleBorder","gradient","darkTheme","GlobalStyles","createGlobalStyle","theme","getFollowing","get","getWatchHistory","getWatchList","WatchHistoryComponent","detailMovie","setdetailMovie","listMovie","setlistMovie","undefined","wantedMovie","setWantedMovie","movieElement","setMovieElement","useEffect","getData","toggleDetailMovie","preMovie","element","i","ListGroup","margin","action","title","xs","Header","Object","entries","toString","previousMovie","block","onAdd","allmovies","LogOutComponent","clear","location","reload","LandingComponent","followerElement","setFollowerElement","watchListElement","setWatchList","movieList","followers","fluid","DarkModeComponent","padding","ButtonGroup","toggle","ToggleButton","checked","darkMode","setDarkMode","toggleDarkMode","NavComponent","loggedUser","userChecker","Navbar","bg","Brand","Nav","Link","href","String","inline","movieSearch","movieTitle","addToWatchList","ImdbID","put","scoreMovie","json","moreDetails","popularSearch","MovieSearchComponent","setTitle","setImdbId","doMovieSearch","Search","popSearch","movieDetailLookup","thing","sendToWatchList","rate","score","rating","imdbId","review","FormControl","onSubmit","result","Title","Poster","App","favMovie","setfavMovies","addFavMovieToList","favoriteMovie","mockUser","setUser","setFollowers","watchList","watchHistory","setWatchHistory","setUserLogIn","exact","path","render","reportWebVitals","onPerfEntry","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0bb7ce7e.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport const webappClient = axios.create({\r\n    baseURL: 'http://18.217.93.22:5555',\r\n    //baseURL: 'http://localhost:5555',\r\n    headers: {\r\n        'Content-Type': 'application/json'\r\n    }\r\n})\r\n\r\n\r\nexport const webappClientAuthorized = axios.create({\r\n    baseURL: 'http://18.217.93.22:5555',\r\n    //baseURL: 'http://localhost:5555',\r\n    headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': localStorage.getItem(\"authorization\"),\r\n    }\r\n})\r\n","import { webappClient } from './webapp-client';\r\nexport async function register(username: string, password: string, email: string, firstName: string, lastName: string, userBio: string) {\r\n    let response = await webappClient.post('/auth', {username, password, email, firstName, lastName, userBio});\r\n    return await response.data;\r\n}","import { webappClient } from \"./webapp-client\";\r\n\r\nexport async function authenticate(username: string, password: string) {\r\n    let response = await webappClient.post('/login', {username, password});\r\n    return await response;\r\n    //return await response.data;\r\n}","import { Form, Button} from \"react-bootstrap\";\r\nimport { useState } from \"react\";\r\nimport { register } from \"../remote/register-service\"\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { authenticate } from \"../remote/login-service\";\r\nimport { User } from \"../models/user\";\r\nimport { follower } from \"../models/follower\";\r\nimport { getFollowing } from \"../remote/landing-service\";\r\n\r\ninterface IAuthProps{\r\n    currentUser: User | undefined,\r\n    setCurrentUser: (setUserLogIn: User | undefined) => void\r\n    //setFollowing: (setUserFollowing: [follower | undefined]) => void\r\n}\r\n\r\nexport function AuthComponent(props: IAuthProps) {\r\n\r\n    const [authName, setAuthName] = useState('');\r\n    const [authPass, setAuthPass] = useState('');\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [firstName, setFirstName] = useState('');\r\n    const [lastName, setLastName] = useState('');\r\n    const [userBio, setUserBio] = useState('');\r\n\r\n    let updateAuthName = (e: any) => {\r\n        setAuthName(e.currentTarget.value);\r\n    }\r\n\r\n    let updateAuthPass = (e: any) => {\r\n        setAuthPass(e.currentTarget.value);\r\n    }\r\n\r\n    let updateUsername = (e: any) => {\r\n        setUsername(e.currentTarget.value);\r\n    }\r\n\r\n    let updatePassword = (e: any) => {\r\n        setPassword(e.currentTarget.value);\r\n    }\r\n\r\n    let updateEmail = (e: any) => {\r\n        setEmail(e.currentTarget.value);\r\n    }\r\n\r\n    let updateFirstName = (e: any) => {\r\n        setFirstName(e.currentTarget.value);\r\n    }\r\n\r\n    let updateLastName = (e: any) => {\r\n        setLastName(e.currentTarget.value);\r\n    }\r\n\r\n    let updateUserBio = (e: any) => {\r\n        setUserBio(e.currentTarget.value);\r\n    }\r\n\r\n    let registerUser = async (e: any) => {\r\n        e.preventDefault();\r\n        console.log(username, password, email, firstName, lastName, userBio);\r\n        await register(username, password, email, firstName, lastName, userBio);\r\n        console.log(\"Complete.\");\r\n    }\r\n\r\n    let loginUser = async (e: any) => {\r\n        e.preventDefault();\r\n        console.log('VERSION 0.1 NEW IP', authName, authPass);\r\n        //let authUser = await authenticate(authName, authPass);\r\n        let response = await authenticate(authName, authPass);\r\n        localStorage.setItem(\"authorization\", response.headers.authorization);\r\n        localStorage.setItem(\"loggedInUser\", JSON.stringify(response.data));\r\n        localStorage.setItem(\"un\",response.data.username)\r\n        props.setCurrentUser(response.data)\r\n        console.log(`Welcome, ${response.data.username}`)\r\n       \r\n    }\r\n    \r\n    \r\n\r\n    return (\r\n        props.currentUser ?\r\n        <Redirect to = \"/landing\"/>\r\n        :\r\n        <>\r\n        <div className=\"col-sm-4 float-sm-right\">\r\n            <Form className=\"row px-4\">\r\n                <h2 className= \"col-12\">Login</h2>\r\n                <Form.Group className=\"col-12 col-sm-6 float-sm-left\" controlId=\"login-form-username\">\r\n                    <Form.Label>Username:</Form.Label>\r\n                    <Form.Control onChange={updateAuthName} type=\"text\" placeholder=\"username\" />\r\n                </Form.Group>\r\n                <Form.Group className=\"col-12 col-sm-6 float-sm-left\" controlId=\"login-form-password\">\r\n                    <Form.Label>Password:</Form.Label>\r\n                    <Form.Control onChange={updateAuthPass} type=\"password\" placeholder=\"******\"/>\r\n                </Form.Group>\r\n                <Form.Group className=\"text-center col-12\">\r\n                    <Button className=\"\" variant=\"danger\" type=\"submit\" onClick={loginUser}>\r\n                        Submit\r\n                    </Button>\r\n                </Form.Group>\r\n            </Form>\r\n            <Form className=\"row px-4\">\r\n                <h2 className=\"col-12\">Register</h2>\r\n                <Form.Group className=\"col-12 col-sm-6 float-sm-left\" controlId=\"registration-form-username\">\r\n                    <Form.Label>Username:</Form.Label>\r\n                    <Form.Control onChange={updateUsername} type=\"text\" placeholder=\"username\" />\r\n                </Form.Group>\r\n                <Form.Group className=\"col-12 col-sm-6 float-sm-left\" controlId=\"registration-form-password\">\r\n                    <Form.Label>Password:</Form.Label>\r\n                    <Form.Control onChange={updatePassword} type=\"password\" placeholder=\"******\"/>\r\n                </Form.Group>\r\n                <Form.Group className=\"col-12\" controlId=\"registration-form-email\">\r\n                    <Form.Label>Email:</Form.Label>\r\n                    <Form.Control onChange={updateEmail} type=\"email\" placeholder=\"johnbond@email.net\" />\r\n                </Form.Group>\r\n                <Form.Group className=\"col-12 col-sm-6 float-sm-left\" controlId=\"registration-form-first-name\">\r\n                    <Form.Label>First Name:</Form.Label>\r\n                    <Form.Control onChange={updateFirstName} type=\"text\" placeholder=\"John\" />\r\n                </Form.Group>\r\n                <Form.Group className=\"col-12 col-sm-6 float-sm-left\" controlId=\"registration-form-last-name\">\r\n                    <Form.Label>Last Name:</Form.Label>\r\n                    <Form.Control onChange={updateLastName} type=\"text\" placeholder=\"Bond\" />\r\n                </Form.Group>\r\n                <Form.Group className=\"col-12\" controlId=\"registration-form-user-bio\">\r\n                    <Form.Label>Bio:</Form.Label>\r\n                    <Form.Control onChange={updateUserBio} as=\"textarea\" rows={3} />\r\n                </Form.Group>\r\n                <Form.Group className=\"text-center col-12\">\r\n                    <Button className=\"\" variant=\"danger\" type=\"submit\" onClick={registerUser}>\r\n                        Submit\r\n                    </Button>\r\n                </Form.Group>\r\n            </Form>\r\n        </div>\r\n        </>\r\n    )\r\n}","\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Card, CardColumns, Carousel, Col, Container, Image, Row } from \"react-bootstrap\";\r\nimport { useLocalStorage } from \"../action/UseLocalStorage\";\r\nimport { Movie } from \"../models/movie\";\r\n\r\n\r\n\r\ninterface IMoviesProp {\r\n    movies: any[]\r\n}\r\n//get movies from user\r\n//check local storage to update fav\r\n//display local storage movies if not empty\r\n//\r\nexport function FavoriteMoviesComponent(props: IMoviesProp) {\r\n    const [index, setIndex] = useState(0);\r\n    const [moviesToggle, setmoviesToggle] = useState(false);\r\n    const [listMovies, setlistMovies] = useState([...props.movies])\r\n    const [localmoviestorage, setlocalmoviestorage]=useLocalStorage(\"movies\",[...props.movies]);\r\n\r\n\r\n    const rows =localmoviestorage.reduce(function (rows:any, key:any, index:any) {\r\n        return (index % 3 == 0 ? rows.push([key])\r\n            : rows[rows.length - 1].push(key)) && rows;\r\n    }, []);\r\n\r\n    //be able to see what row displays.\r\n    // console.log(rows);\r\n    \r\n    return (\r\n        <>\r\n            {localmoviestorage && <Container style={{ marginTop: \"50px\" }}>\r\n                <Row>\r\n                    <Col>\r\n                        <Carousel>\r\n                            {rows.map((twoMovies: any) => (\r\n                                <Carousel.Item >\r\n                                    <CardColumns>\r\n                                        {twoMovies.map((movie: any) => (\r\n                                            <Card >\r\n                                                <Card.Img width={201} height={403} alt=\"201x403\" src={movie.poster} />\r\n                                            </Card>))}\r\n                                    </CardColumns>\r\n                                </Carousel.Item>\r\n                            ))}\r\n                        </Carousel>\r\n                    </Col>\r\n                </Row>\r\n            </Container>}\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n","import { useState } from \"react\";\r\n\r\nexport function useLocalStorage(key:any, initialValue:any) {\r\n  // State to store our value\r\n  // Pass initial state function to useState so logic is only executed once\r\n  const [storedValue, setStoredValue] = useState(() => {\r\n    try {\r\n      // Get from local storage by key\r\n      const item = window.localStorage.getItem(key);\r\n      // Parse stored json or if none return initialValue\r\n      return item ? JSON.parse(item) : initialValue;\r\n    } catch (error) {\r\n      // If error also return initialValue\r\n      console.log(error);\r\n      return initialValue;\r\n    }\r\n  });\r\n  // Return a wrapped version of useState's setter function that ...\r\n  // ... persists the new value to localStorage.\r\n  const setValue = (value:any) => {\r\n    try {\r\n      // Allow value to be a function so we have same API as useState\r\n      const valueToStore =\r\n        value instanceof Function ? value(storedValue) : value;\r\n      // Save state\r\n      setStoredValue(valueToStore);\r\n      // Save to local storage\r\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\r\n    } catch (error) {\r\n      // A more advanced implementation would handle the error case\r\n      console.log(error);\r\n    }\r\n  };\r\n  return [storedValue, setValue];\r\n}","export const lightTheme = {\r\n    background: '#E2E2E2',\r\n    color: '#363537',\r\n    toggleBorder: '#FFF',\r\n    gradient: 'linear-gradient(#39598A, #79D7ED)',\r\n  }\r\n  \r\n  export const darkTheme = {\r\n    background: '#363537',\r\n    color: '#FAFAFA',\r\n    toggleBorder: '#6B8096',\r\n    gradient: 'linear-gradient(#091236, #1E215D)',\r\n  }","import { createGlobalStyle } from 'styled-components';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *,\r\n  *::after,\r\n  *::before {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    align-items: center;\r\n    background: ${({ theme }) => theme.background};\r\n    color: ${({ theme }) => theme.color};\r\n    font-family: BlinkMacSystemFont, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;\r\n    transition: all 0.25s linear;\r\n  }\r\n  \r\n  .card {\r\n    background: ${({ theme }) => theme.background};\r\n    color: ${({ theme }) => theme.color};\r\n    font-family: BlinkMacSystemFont, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;\r\n    transition: all 0.25s linear;\r\n  }\r\n\r\n  nav {\r\n    background: ${({ theme }) => theme.background};\r\n    color: ${({ theme }) => theme.color};\r\n    font-family: BlinkMacSystemFont, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;\r\n    transition: all 0.25s linear;\r\n  }\r\n\r\n  .list-group-item {\r\n    background: ${({ theme }) => theme.background};\r\n    color: ${({ theme }) => theme.color};\r\n    font-family: BlinkMacSystemFont, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif;\r\n    transition: all 0.25s linear;\r\n  }\r\n  \r\n  \r\n  \r\n  \r\n  `;","import { webappClient, webappClientAuthorized } from \"./webapp-client\";\r\n\r\n// export async function getFollowing(userId: String | undefined){\r\n//     let response = await webappClient.get(`followerdetail/${userId}`)\r\n//     console.log(\"Data:\" + response.data)\r\n//     return await response.data;\r\n// }\r\n\r\n\r\nexport async function getFollowing(){\r\n    let response = await webappClientAuthorized.get(`/followerdetail`)\r\n    console.log(\"Data:\" + response.data)\r\n    return await response.data;\r\n}\r\n\r\nexport async function getWatchHistory() {\r\n    let response = await webappClientAuthorized.get('/history');\r\n    return await response.data;\r\n}\r\n\r\nexport async function getWatchList(){\r\n    let response = await webappClientAuthorized.get(`/wishlist`)\r\n    console.log(\"Data:\" + response.data)\r\n    return await response.data;\r\n}\r\n\r\n\r\n\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Navbar, Button, Card, Col, Container, ListGroup, Image, Nav, Row } from \"react-bootstrap\";\r\nimport { Movie } from \"../models/movie\";\r\nimport { User } from \"../models/user\";\r\nimport { moreDetails } from \"../remote/moreInfo-service\";\r\nimport { getWatchHistory } from \"../remote/landing-service\";\r\n\r\ninterface IWatchHistoryProps {\r\n    //this prop refers to what we will use to call in App state level\r\n    currentUser: User | undefined\r\n    allmovies: Movie[];\r\n    onAdd: (fm: Movie) => void;\r\n}\r\n\r\nexport function WatchHistoryComponent(props: IWatchHistoryProps) {\r\n\r\n\r\n    const [detailMovie, setdetailMovie] = useState(false);\r\n    const [listMovie, setlistMovie] = useState(true);\r\n    const [wantedMovie, setWantedMovie] = useState(undefined as unknown as Movie || undefined);\r\n    const [movieElement, setMovieElement] = useState(undefined as unknown as Movie[] || undefined);\r\n\r\n    useEffect(()=> {\r\n        const getData = async () => {\r\n            let response = await getWatchHistory();\r\n            setMovieElement(response)\r\n            console.log(movieElement);\r\n        };\r\n        getData();\r\n    }, [])\r\n\r\n    let toggleDetailMovie = (movie: any) => {\r\n        setWantedMovie(preMovie => movie);\r\n        setlistMovie(false);\r\n        setdetailMovie(true);\r\n    }\r\n\r\n    let toggleListMovie = (e: any) => {\r\n        e.preventDefault();\r\n        setWantedMovie(previousMovie => undefined as unknown as Movie);\r\n        setdetailMovie(false);\r\n        setlistMovie(true);\r\n    }\r\n\r\n\r\n    //click or double for more details on movies serperate call to another api(/movieDetails/id)--->just id(IMdb [tt}])\r\n    return (\r\n        <>\r\n            {/* <Navbar>\r\n                <Nav>\r\n                    <Nav.Link href=\"/landing\">Landing</Nav.Link>\r\n                </Nav>\r\n            </Navbar> */}\r\n            {listMovie && <Container style={{ marginTop: \"100px\" }}>\r\n                <Row >\r\n                    {/* //parent class to return */}\r\n                    <Col>\r\n                        {movieElement?.map((element, i) => {\r\n                            return (\r\n                                i % 2 === 0\r\n                                    ?\r\n                                    <ListGroup style={{ margin: \"10px\" }}>\r\n                                        <ListGroup.Item action onClick={() => toggleDetailMovie(element)} variant=\"dark\"> {element.title}</ListGroup.Item>\r\n                                    </ListGroup>\r\n                                    :\r\n                                    <ListGroup style={{ margin: \"10px\" }}>\r\n                                        <ListGroup.Item action onClick={() => toggleDetailMovie(element)} variant=\"light\"> {element.title}</ListGroup.Item>\r\n                                    </ListGroup>\r\n                            )\r\n                        })}\r\n                    </Col>\r\n                </Row>\r\n            </Container>}\r\n\r\n            {detailMovie &&\r\n                <Container >\r\n                    <Row >\r\n                        <Col ></Col>\r\n                        <Col xs={8} >\r\n                            <Card>\r\n                                <Card.Header>{wantedMovie.title}</Card.Header>\r\n                                <Card.Img src={wantedMovie.poster} className=\"d-block mx-auto img-fluid w-50\" />\r\n                                <ListGroup>{Object.entries(wantedMovie).map(([key, value]) => {\r\n                                    return (\r\n                                        <ListGroup.Item>{key} : {value.toString()}</ListGroup.Item>\r\n                                    )\r\n                                })}\r\n                                    <Container>\r\n                                        <Row className=\"justify-content-center\">\r\n                                            <Col>\r\n                                                <Button variant=\"outline-danger\" onClick={toggleListMovie} block>Close</Button>{' '}\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button variant=\"outline-warning\" block>Rate</Button>{' '}\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button variant=\"outline-success\" onClick={() => { props.onAdd(wantedMovie);localStorage.setItem(\"movies\",JSON.stringify([...props.allmovies,wantedMovie])) }} block>Favorites</Button>{' '}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Container>\r\n                                </ListGroup>\r\n\r\n                            </Card>\r\n                        </Col>\r\n                        <Col></Col>\r\n                    </Row>\r\n                </Container>\r\n\r\n            }\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\n","import { useEffect } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { User } from \"../models/user\";\r\ninterface IPropLogOut{\r\n    currentUser: User | undefined,\r\n    setCurrentUser: (setUserLogIn: User | undefined) => void\r\n}\r\n\r\nexport function LogOutComponent(props:IPropLogOut){\r\n\r\n    useEffect(()=> {\r\n        localStorage.clear();\r\n        props.setCurrentUser(undefined);\r\n        window.location.reload();\r\n    })\r\n\r\n    \r\n    return(\r\n        <>\r\n            <Redirect to = \"/\"/>\r\n        </>\r\n    )\r\n}","import React, { useState, useEffect } from \"react\"\r\nimport {ListGroup, Card, Container, Row, Col, Carousel, CardGroup} from \"react-bootstrap\"\r\nimport { follower } from \"../models/follower\";\r\nimport { Movie } from \"../models/movie\";\r\nimport { User } from \"../models/user\";\r\nimport { getFollowing, getWatchList, getWatchHistory } from \"../remote/landing-service\";\r\n//import { getWatchHistory } from \"../remote/watchlist-service\";\r\n\r\n//TODO: Setup interface to take a created User property\r\ninterface IUserprops{\r\n    currentUser: User | undefined,\r\n    setCurrentUser: (setUserLogIn: User | undefined) => void,\r\n    followers: follower[] | undefined,\r\n    setFollowers: (setFollowersList: follower[]) => void\r\n    watchList: Movie[] | undefined,\r\n    setWatchList: (setWatchList: Movie[]) => void\r\n    watchHistory: Movie[] | undefined,\r\n    setWatchHistory: (setWatchHistory: Movie[]) => void\r\n}\r\n\r\nexport function LandingComponent(props: IUserprops){\r\n\r\n    const fakeMovieList = [\"movie1\", \"movie2\", \"movie3\", \"movie 4\", \"movie 5\", \"movie6\"]\r\n \r\n    const [movieElement, setMovieElement] = useState(undefined as unknown as Movie[] || undefined);\r\n    const [followerElement, setFollowerElement] = useState(undefined as unknown as follower[] || undefined);\r\n    const [watchListElement, setWatchList] = useState(undefined as unknown as Movie[] || undefined);\r\n\r\n    // let followers: follower[] = [];\r\n\r\n  \r\n\r\n        // useEffect(()=> {\r\n        //     console.log(\"Use Effect is Called\")\r\n        //     const getData = async () => {\r\n        //         followers = await getFollowing();\r\n        //         //props.setFollowers(followers);\r\n        //         console.log(\"follwoers: \" + props.followers)\r\n        //     };\r\n        //     getData();\r\n        // }, [])\r\n\r\n    // let movieList: Movie[] = [];\r\n    //     useEffect(()=> {\r\n    //         console.log(\"Use Effect 2 is Called\")\r\n    //         const getData = async () => {\r\n    //             movieList = await getWatchList(props.currentUser?.id);\r\n    //             props.setWatchList(movieList)\r\n    //         };\r\n    //         getData();\r\n    //     }, [])\r\n\r\n\r\n\r\n\r\n\r\n        // let movieList: Movie[] = [];\r\n\r\n        useEffect(()=> {\r\n            console.log(\"Use Effect 2 is Called\")\r\n            const getData = async () => {\r\n                let movieList = await getWatchList();\r\n                setWatchList(movieList)\r\n            };\r\n            getData();\r\n        }, [])\r\n\r\n\r\n        useEffect(()=> {\r\n            const getData = async () => {\r\n                let response = await getWatchHistory();\r\n                setMovieElement(response);\r\n                //console.log(movieElement);\r\n            };\r\n            getData();\r\n        }, [])\r\n\r\n        //let followers: follower[] = [];\r\n        useEffect(()=> {\r\n            console.log(\"Use Effect is Called\")\r\n            const getData = async () => {\r\n                let followers = await getFollowing();\r\n                setFollowerElement(followers);\r\n               //console.log(\"follwoers: \" + props.followers)\r\n            };\r\n            getData();\r\n        }, [])\r\n\r\n        // movieList = []\r\n        // useEffect(()=> {\r\n        //     console.log(\"Use Effect 3 is Called\")\r\n        //     const getData = async () => {\r\n        //         movieList = await getWatchHistory(props.currentUser?.id);\r\n        //         props.setWatchHistory(movieList)\r\n        //     };\r\n        //     getData();\r\n        // }, [])\r\n   \r\n\r\n    const rows = fakeMovieList.reduce(function (rows: any, key, index) { \r\n        return (index % 2 == 0 ? rows.push([key]) \r\n          : rows[rows.length-1].push(key)) && rows;\r\n      }, []);\r\n\r\n      let carouselMap = function (rows: any, key: any, index: any) { \r\n        return (index % 2 == 0 ? rows.push([key]) \r\n          : rows[rows.length-1].push(key)) && rows;\r\n      }\r\n\r\n    return(\r\n        <>\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col xs = \"10\">\r\n                        <br/>\r\n                        <Card className=\"text-center\">\r\n                            <Card.Header>Movies To Watch List</Card.Header>\r\n                                <Carousel>\r\n                                    {\r\n                                        watchListElement\r\n                                        ?\r\n                                        watchListElement.map(movie => (\r\n                                            <Carousel.Item>\r\n                                                <div>\r\n                                                    <span className=\"d-block\">{movie.title}</span> \r\n                                                    <img src={movie.poster}/>\r\n                                                </div>\r\n                                            </Carousel.Item>\r\n                                            ))\r\n                                        :\r\n                                        <Carousel.Item> Your Watch List is empty</Carousel.Item>\r\n                                    }\r\n                                    {/* {fakeMovieList.map(fakeMovieList => (\r\n                                        <Carousel.Item>\r\n                                            {fakeMovieList}\r\n                                        </Carousel.Item>\r\n                                    ))} */}\r\n                                </Carousel>\r\n\r\n                        </Card>\r\n                        <br/>\r\n                        <Card className=\"text-center\">\r\n                        <Card.Header>Movie Watch History</Card.Header>\r\n                            <Carousel className=\"text-center\">\r\n                                {\r\n                                    movieElement\r\n                                    ?\r\n                                    movieElement.map(movie => (\r\n                                        <Carousel.Item>\r\n                                            <div>\r\n                                                <span className=\"d-block\">{movie.title}</span> \r\n                                                <img src={movie.poster}/>\r\n                                            </div>\r\n                                        </Carousel.Item>\r\n                                    ))\r\n                                    :\r\n                                    <Carousel.Item> Your Watch History is empty</Carousel.Item>\r\n                                }\r\n                                {/* {rows.map((twoMovies: any) => (\r\n                                    <Carousel.Item>\r\n                                        <CardGroup>\r\n                                            {twoMovies.map((movie:any) => (\r\n                                                <Card>\r\n                                                    {movie}\r\n                                                </Card>\r\n                                            ))}\r\n                                        </CardGroup>\r\n                                    </Carousel.Item>\r\n                                ))} */}\r\n                            </Carousel>\r\n                        </Card>\r\n\r\n                    </Col>\r\n                    <Col className=\"pt-4\">\r\n                    <Card style={{height: \"57rem\"}}>\r\n                    <Card.Header>Friends</Card.Header>\r\n                        <div className=\"justify-content-center\">\r\n                                <ListGroup className=\"seacrh=results\" variant=\"flush\">\r\n                                    {\r\n                                        followerElement\r\n                                        ?\r\n                                        followerElement.map(followers => (\r\n                                            <ListGroup.Item>\r\n                                                {followers.username}\r\n                                            </ListGroup.Item>\r\n                                        )) \r\n                                        :\r\n                                        <ListGroup.Item> No Follower Found</ListGroup.Item>\r\n                                    }\r\n                                   \r\n                                </ListGroup>\r\n                        </div>\r\n                        \r\n                    </Card>\r\n                        \r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n      \r\n        </>\r\n    )\r\n}","import React from 'react';\r\nimport { useState } from \"react\";\r\nimport { ButtonGroup, ToggleButton } from 'react-bootstrap';\r\nimport useToggle from '../hooks/UseToggle';\r\n\r\n\r\ninterface IDarkModeProps {\r\n    darkMode: boolean,\r\n    setDarkMode: (darkMode: boolean) => void\r\n}\r\n\r\nfunction DarkModeComponent(props: IDarkModeProps) {\r\n\r\n    let toggleDarkMode = (e: any) => {\r\n        if(props.darkMode) {\r\n            props.setDarkMode(false);\r\n        } else {\r\n            props.setDarkMode(true);\r\n        }\r\n\r\n\r\n        console.log('currentTarget', e.currentTarget.checked);\r\n        console.log('darkMode: ', props.darkMode);\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div style={{ padding: '0px 5px 0px 5px' }}>\r\n            <ButtonGroup toggle className=\"mr-sm-2\">\r\n                <ToggleButton\r\n                    type=\"checkbox\"\r\n                    variant=\"secondary\"\r\n                    checked={props.darkMode}\r\n                    value=\"1\"\r\n                    onChange={(e) => toggleDarkMode(e)}\r\n                >\r\n                    {props.darkMode ? 'Dark' : 'Light'}\r\n                </ToggleButton>\r\n            </ButtonGroup>\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default DarkModeComponent;","import { Navbar, Nav, Form, FormControl, Button } from \"react-bootstrap\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { follower } from \"../models/follower\";\r\nimport { User } from \"../models/user\";\r\nimport DarkModeComponent from \"./DarkModeToggleComponent\";\r\n\r\ninterface INavProps{\r\n    currentUser: User | undefined,\r\n    setUserLogIn: (currentLoginStatus: User | undefined) => void,\r\n    darkMode: boolean,\r\n    setDarkMode: (darkMode: boolean) => void\r\n}\r\n\r\nfunction NavComponent(props: INavProps){\r\n\r\n\r\n    //get logged in user from local storage\r\n    const loggedUser = JSON.parse(localStorage.getItem(\"loggedInUser\")||\"{}\");\r\n    const userChecker = localStorage.getItem(\"loggedInUser\");\r\n\r\n    function logOut(){\r\n        //props.setUserLoggedIn(undefined);\r\n    }\r\n   \r\n    console.log(loggedUser);\r\n    console.log(\"userchecker\",userChecker)\r\n    return(\r\n    <>\r\n        <Navbar bg=\"light\">\r\n            \r\n            <Navbar.Brand><Nav.Link href=\"\"><img style={{\"margin\":\"0px\", \"width\":\"35px\"}} src=\"logo192.png\" />\r\n                Cineholics Anonymous</Nav.Link></Navbar.Brand>\r\n            {\r\n                userChecker\r\n                \r\n                ?\r\n                <>\r\n                    <Nav className=\"mr-auto\">\r\n                        <Nav.Link href=\"/landing\">{String(loggedUser.username)}'s Profile</Nav.Link>\r\n                        {/* <Nav.Link href=\"/watchhistory\">My Watch History</Nav.Link>\r\n                        <Nav.Link href=\"/watchlist\">My Future Watch List</Nav.Link> */}\r\n                        {/* <Nav.Link href=\"/favmovies\">Favorites</Nav.Link> */}\r\n                        <Nav.Link href=\"/out\">Log Out</Nav.Link>\r\n                    </Nav>\r\n                    <Form inline>\r\n                        <Nav.Link href=\"/moviesearch\">Movie Search</Nav.Link>\r\n                        {/* <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\"/>\r\n                        <Button type=\"submit\">Submit</Button>   */}\r\n\r\n                    </Form>\r\n                    <DarkModeComponent darkMode={props.darkMode} setDarkMode={props.setDarkMode}/>\r\n                    </>\r\n                    :\r\n                    <>\r\n                    <Nav className=\"mr-auto\">\r\n\r\n                    </Nav>\r\n \r\n                    </>\r\n            }\r\n\r\n        </Navbar>\r\n    </>\r\n    )\r\n}\r\nexport default NavComponent;","import { webappClient, webappClientAuthorized } from \"./webapp-client\";\r\n\r\nexport async function movieSearch(movieTitle: string) {\r\n    let response = await webappClientAuthorized.get(`/rapidSearch/${movieTitle}`);\r\n    return await response.data;\r\n}\r\n\r\nexport async function addToHistory(ImdbID: string){\r\n    let response = await webappClientAuthorized.put(`/addToHistory/${ImdbID}`)\r\n    //console.log(\"Data:\" + response.data)\r\n    return await response.data;\r\n}\r\n\r\nexport async function addToWatchList(ImdbID: string){\r\n    let response = await webappClientAuthorized.put(`/addToWishList/${ImdbID}`)\r\n    //console.log(\"Data:\" + response.data)\r\n    return await response.data;\r\n}\r\n\r\nexport async function scoreMovie(json: string){\r\n    let response = await webappClientAuthorized.put(`/movieScore`, json)\r\n    //console.log(\"Data:\" + response.data)\r\n    return await response.data;\r\n}\r\n\r\n","import { webappClient } from './webapp-client';\r\n\r\nexport async function moreDetails(ImdbID: string){\r\n    let response = await webappClient.get(`/movieDetails/${ImdbID}`);\r\n    return await response.data;\r\n}\r\n\r\n\r\nexport async function popularSearch(){\r\n    let response = await webappClient.get(`/imdbSearch`);\r\n    return await response.data;\r\n}\r\n\r\n","import { Button, ButtonGroup, Card, CardColumns, Carousel, Col, Container, FormControl, Image, ListGroup, Row } from \"react-bootstrap\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useLocalStorage } from \"../action/UseLocalStorage\";\r\nimport { Movie } from \"../models/movie\";\r\nimport { Result } from \"../models/rapidSearchResult\";\r\nimport { addToWatchList, movieSearch, scoreMovie } from \"../remote/moviesearch-service\";\r\nimport { moreDetails, popularSearch } from \"../remote/moreInfo-service\";\r\n\r\n\r\ninterface IMovieSearch {\r\n}\r\n\r\nexport function MovieSearchComponent(props: IMovieSearch) {\r\n\r\n    const [movieElement, setMovieElement] = useState(undefined as unknown as Result[] || undefined);\r\n    const [title, setTitle] = useState('');\r\n    const [detailMovie, setdetailMovie] = useState(false);\r\n    const [listMovie, setlistMovie] = useState(false);\r\n    const [wantedMovie, setWantedMovie] = useState(undefined as unknown as Result || undefined);\r\n    const [ImdbID, setImdbId] = useState('');\r\n\r\n    let toggleDetailMovie = (result: Result) => {\r\n        console.log('RESULT', result)\r\n        setWantedMovie(result);\r\n        setImdbId(result.ImdbID);\r\n        movieDetailLookup(result.ImdbID);\r\n        setlistMovie(false);\r\n        setdetailMovie(true);\r\n    }\r\n    let toggleListMovie = (e: any) => {\r\n        e.preventDefault();\r\n        setWantedMovie(previousMovie => undefined as unknown as Result);\r\n        setdetailMovie(false);\r\n        setlistMovie(true);\r\n    }\r\n    let doMovieSearch = async (e: any) => {\r\n        e.preventDefault();\r\n        const getData = async () => {\r\n            console.log('search title: ' + title);\r\n            let response = await movieSearch(title);\r\n            console.log(response)\r\n            setMovieElement(response.Search);\r\n        };\r\n        getData();\r\n        setlistMovie(true);\r\n    }\r\n\r\n    let popSearch = async () => {\r\n        console.log('popular movie search') \r\n        let response = await popularSearch();\r\n        console.log('POP: ', response)\r\n        setMovieElement(response.Search);\r\n        setlistMovie(true);\r\n        }\r\n    \r\n\r\n    let movieDetailLookup = async (thing: string) => {\r\n        const getData = async () => {\r\n            let response = await moreDetails(thing);\r\n            console.log('MOVIE DETAILS' + response);\r\n        }\r\n        getData();\r\n    }\r\n\r\n    let updateTitle = (e: any) => {\r\n        setTitle(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    let sendToWatchList = async () => {\r\n        const getData = async () => {\r\n            let response = await addToWatchList(ImdbID);\r\n            console.log('SENT TO WATCHLIST' + response);\r\n        }\r\n        getData();\r\n    }\r\n\r\n    let rate = async (score: number) => {\r\n        let rating = {\r\n            imdbId: ImdbID,\r\n            score: score,\r\n            review: \"\"\r\n        }\r\n        console.log('RATING: ', rating)\r\n        let json = JSON.stringify(rating);\r\n        console.log('JSON: ', json)\r\n        let response = await scoreMovie(json);\r\n        console.log('RESP: ', response)\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Container style={{ marginTop: \"10px\" }}>\r\n                <Row className=\"justify-content-center\">\r\n                    <Col className=\"col-6\" style={{ padding: \"2px\" }}>\r\n                        <FormControl type=\"text\" placeholder=\"Search\" onSubmit={doMovieSearch} onChange={updateTitle} />\r\n                    </Col>\r\n                    <Col className=\"col-1\" style={{ padding: \"2px\" }}>\r\n                        <Button type=\"submit\" onClick={doMovieSearch} >Submit</Button>\r\n                    </Col>\r\n                    <Col className=\"col-1\" style={{ padding: \"2px\" }}>\r\n                        <Button type=\"submit\" onClick={popSearch} >Popular</Button>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n            {\r\n                listMovie\r\n                &&\r\n                <Container>\r\n                    <Row>\r\n                        <Col>\r\n                            <ListGroup>\r\n                                {movieElement?.map((movie) => {\r\n                                    return (\r\n                                        <ListGroup.Item action onClick={() => toggleDetailMovie(movie)} style={{ margin: \"10px\" }}>\r\n                                            {movie.Title}\r\n                                        </ListGroup.Item>\r\n                                    )\r\n                                })}\r\n                            </ListGroup>\r\n                        </Col>\r\n                    </Row>\r\n                </Container>\r\n            }\r\n            {\r\n                detailMovie\r\n                &&\r\n                <Container >\r\n                    <Row >\r\n                        <Col ></Col>\r\n                        <Col xs={8} >\r\n                            <Card>\r\n                                <Card.Header>{wantedMovie.Title}</Card.Header>\r\n                                <Card.Img src={wantedMovie.Poster} className=\"d-block mx-auto img-fluid w-50\" />\r\n                                <ListGroup>{Object.entries(wantedMovie).map(([key, value]) => {\r\n                                    return (\r\n                                        <ListGroup.Item>{key} : {value.toString()}</ListGroup.Item>\r\n                                    )\r\n                                })}\r\n                                    <Container>\r\n                                        <Row className=\"justify-content-center\">\r\n                                            <Col>\r\n                                                <Button variant=\"outline-danger\" onClick={toggleListMovie} block>Close</Button>{' '}\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Row className=\"justify-content-center\">\r\n                                                    <Button style={{margin: \"0px\"}} className=\"i-block col-2\" variant=\"outline-warning\" onClick={() => rate(1)} block>1</Button>\r\n                                                    <Button style={{margin: \"0px\"}} className=\"i-block col-2\" variant=\"outline-warning\" onClick={() => rate(2)} block>2</Button>\r\n                                                    <Button style={{margin: \"0px\"}} className=\"i-block col-2\" variant=\"outline-warning\" onClick={() => rate(3)} block>3</Button>\r\n                                                    <Button style={{margin: \"0px\"}} className=\"i-block col-2\" variant=\"outline-warning\" onClick={() => rate(4)} block>4</Button>\r\n                                                    <Button style={{margin: \"0px\"}} className=\"i-block col-2\" variant=\"outline-warning\" onClick={() => rate(5)} block>5</Button>\r\n                                                </Row>\r\n                                            </Col>\r\n                                            <Col>\r\n                                                <Button variant=\"outline-success\" onClick={sendToWatchList} block>+</Button>{' '}\r\n                                            </Col>\r\n                                        </Row>\r\n                                    </Container>\r\n                                </ListGroup>\r\n                            </Card>\r\n                        </Col>\r\n                        <Col></Col>\r\n                    </Row>\r\n                </Container>\r\n            }\r\n        </>\r\n    )\r\n}\r\n","//import logo from './logo.svg';\r\nimport {BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport { AuthComponent } from './components/AuthComponent';\r\nimport { FavoriteMoviesComponent } from './components/FavoriteMoviesComponent';\r\nimport { useState } from \"react\";\r\nimport './App.css';\r\n\r\n//themes\r\nimport { ThemeProvider } from 'styled-components';\r\nimport { lightTheme, darkTheme } from './themes/themes';\r\nimport { GlobalStyles } from './themes/global';\r\n\r\n\r\nimport { WatchHistoryComponent } from './components/WatchHistoryComponent';\r\nimport { LogOutComponent } from './components/LogOutComponent';\r\nimport { LandingComponent } from './components/LandingComponent';\r\nimport NavComponent from './components/NavComponent';\r\nimport { Movie } from './models/movie';\r\nimport { User } from './models/user';\r\nimport { follower } from './models/follower';\r\nimport { MovieSearchComponent } from './components/MovieSearchComponent';\r\n\r\n\r\n//const logo = require(\"./logo.svg\") as string;\r\n\r\n//const mockUser = false;\r\n\r\nfunction App() {\r\n  const [loggedIn, setLoggedIn] = useState(undefined as boolean | undefined);\r\n  const [favMovie, setfavMovies] = useState(undefined as unknown as Movie[] || undefined);\r\n\r\n  const addFavMovieToList = (favoriteMovie:Movie)=>{\r\n    setfavMovies([...favMovie,favoriteMovie])\r\n  }\r\n\r\n\r\n        \r\n  const[mockUser, setUser] = useState(undefined as User | undefined);\r\n  const [followers, setFollowers] = useState(undefined as follower[] | undefined)\r\n  const [watchList, setWatchList] = useState(undefined as Movie[] | undefined)\r\n  const [watchHistory, setWatchHistory] = useState(undefined as Movie[] | undefined)\r\n  const [darkMode, setDarkMode] = useState(false as boolean);\r\n\r\n\r\n  return (\r\n\r\n    <ThemeProvider theme={darkMode ? darkTheme : lightTheme}>\r\n      <>\r\n        <GlobalStyles />\r\n        <Router>\r\n          <NavComponent currentUser={mockUser} setUserLogIn={setUser} darkMode={darkMode} setDarkMode={setDarkMode} ></NavComponent>\r\n          <Switch>\r\n            <Route exact path=\"/\" render={() => <AuthComponent currentUser={mockUser} setCurrentUser={setUser}/>} />\r\n            <Route exact path=\"/favmovies\" render={() =><FavoriteMoviesComponent movies={favMovie}/>}/>\r\n            <Route exact path=\"/watchhistory\" render={() =><WatchHistoryComponent currentUser={mockUser} allmovies={favMovie} onAdd={addFavMovieToList}/>}/>\r\n            <Route exact path=\"/landing\" render={() => <LandingComponent currentUser={mockUser} setCurrentUser={setUser} followers={followers}\r\n             setFollowers ={setFollowers} watchList={watchList} setWatchList={setWatchList} watchHistory={watchHistory} setWatchHistory={setWatchHistory}/>}/>\r\n             <Route exact path=\"/moviesearch\" render={() => <MovieSearchComponent/>} />\r\n            <Route exact path=\"/out\" render={() => <LogOutComponent currentUser={mockUser} setCurrentUser={setUser}/>} />\r\n          </Switch>\r\n        </Router>\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { AuthComponent } from './components/AuthComponent';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}